@model JobIT.web.Models.Job

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal mt-3 container edit-job-container">
        <h4>Edit Job Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreatedBy)

        <div class="form-row row-1">
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row-2">
            <p>Add more job responsibilities to the list by seperating each by a fullstop (.)</p>
            @Html.LabelFor(model => model.Responsibilities, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Responsibilities, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Responsibilities, "", new { @class = "text-danger" })
        </div>

        <div class="form-row row-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row row-4">
            <div class="form-group">
                @Html.LabelFor(model => model.JobTypeId, "Job Type", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("JobTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JobTypeId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SectorId, "Sector", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("SectorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row-5">
            <h4>Check/Uncheck to toggle job availability</h4>
            <hr />
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary button" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#openSideNav").click(function () {
                $(".sidenav").toggleClass("active");
            });

            $("#closeSideNav").click(function () {
                $(".sidenav").toggleClass("active");
            });
        })
    </script>
}
